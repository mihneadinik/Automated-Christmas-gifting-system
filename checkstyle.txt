Starting audit...
[ERROR] /home/mihnea_dnk/Desktop/PooProiect/ProiectPOO/./src/utils/Utils.java:10:21: '{' is not followed by whitespace. [WhitespaceAround]
[ERROR] /home/mihnea_dnk/Desktop/PooProiect/ProiectPOO/./src/utils/Utils.java:10:22: '}' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/mihnea_dnk/Desktop/PooProiect/ProiectPOO/./src/utils/Utils.java:12:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/mihnea_dnk/Desktop/PooProiect/ProiectPOO/./src/utils/Utils.java:28:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/mihnea_dnk/Desktop/PooProiect/ProiectPOO/./src/utils/Utils.java:40:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/mihnea_dnk/Desktop/PooProiect/ProiectPOO/./src/fileio/AnnualChangesInputData.java:20:5: Class 'AnnualChangesInputData' looks like designed for extension (can be subclassed), but the method 'getNewSantaBudget' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AnnualChangesInputData' final or making the method 'getNewSantaBudget' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihnea_dnk/Desktop/PooProiect/ProiectPOO/./src/fileio/AnnualChangesInputData.java:24:5: Class 'AnnualChangesInputData' looks like designed for extension (can be subclassed), but the method 'setNewSantaBudget' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AnnualChangesInputData' final or making the method 'setNewSantaBudget' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihnea_dnk/Desktop/PooProiect/ProiectPOO/./src/fileio/AnnualChangesInputData.java:24:35: Parameter newSantaBudget should be final. [FinalParameters]
[ERROR] /home/mihnea_dnk/Desktop/PooProiect/ProiectPOO/./src/fileio/AnnualChangesInputData.java:28:5: Class 'AnnualChangesInputData' looks like designed for extension (can be subclassed), but the method 'getNewGifts' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AnnualChangesInputData' final or making the method 'getNewGifts' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihnea_dnk/Desktop/PooProiect/ProiectPOO/./src/fileio/AnnualChangesInputData.java:32:5: Class 'AnnualChangesInputData' looks like designed for extension (can be subclassed), but the method 'setNewGifts' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AnnualChangesInputData' final or making the method 'setNewGifts' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihnea_dnk/Desktop/PooProiect/ProiectPOO/./src/fileio/AnnualChangesInputData.java:32:29: Parameter newGifts should be final. [FinalParameters]
[ERROR] /home/mihnea_dnk/Desktop/PooProiect/ProiectPOO/./src/fileio/AnnualChangesInputData.java:36:5: Class 'AnnualChangesInputData' looks like designed for extension (can be subclassed), but the method 'getNewChildren' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AnnualChangesInputData' final or making the method 'getNewChildren' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihnea_dnk/Desktop/PooProiect/ProiectPOO/./src/fileio/AnnualChangesInputData.java:40:5: Class 'AnnualChangesInputData' looks like designed for extension (can be subclassed), but the method 'setNewChildren' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AnnualChangesInputData' final or making the method 'setNewChildren' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihnea_dnk/Desktop/PooProiect/ProiectPOO/./src/fileio/AnnualChangesInputData.java:40:32: Parameter newChildren should be final. [FinalParameters]
[ERROR] /home/mihnea_dnk/Desktop/PooProiect/ProiectPOO/./src/fileio/AnnualChangesInputData.java:44:5: Class 'AnnualChangesInputData' looks like designed for extension (can be subclassed), but the method 'getChildrenUpdate' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AnnualChangesInputData' final or making the method 'getChildrenUpdate' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihnea_dnk/Desktop/PooProiect/ProiectPOO/./src/fileio/AnnualChangesInputData.java:48:5: Class 'AnnualChangesInputData' looks like designed for extension (can be subclassed), but the method 'setChildrenUpdate' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AnnualChangesInputData' final or making the method 'setChildrenUpdate' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihnea_dnk/Desktop/PooProiect/ProiectPOO/./src/fileio/AnnualChangesInputData.java:48:35: Parameter childrenUpdate should be final. [FinalParameters]
[ERROR] /home/mihnea_dnk/Desktop/PooProiect/ProiectPOO/./src/fileio/AnnualChangesInputData.java:52:5: Class 'AnnualChangesInputData' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AnnualChangesInputData' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihnea_dnk/Desktop/PooProiect/ProiectPOO/./src/fileio/AnnualChangesInputData.java:54:42: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/mihnea_dnk/Desktop/PooProiect/ProiectPOO/./src/fileio/AnnualChangesInputData.java:55:52: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/mihnea_dnk/Desktop/PooProiect/ProiectPOO/./src/fileio/AnnualChangesInputData.java:56:42: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/mihnea_dnk/Desktop/PooProiect/ProiectPOO/./src/fileio/AnnualChangesInputData.java:57:48: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/mihnea_dnk/Desktop/PooProiect/ProiectPOO/./src/fileio/AnnualChangesInputData.java:58:54: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/mihnea_dnk/Desktop/PooProiect/ProiectPOO/./src/fileio/ChildrenUpdateInputData.java:19:5: Class 'ChildrenUpdateInputData' looks like designed for extension (can be subclassed), but the method 'getId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildrenUpdateInputData' final or making the method 'getId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihnea_dnk/Desktop/PooProiect/ProiectPOO/./src/fileio/ChildrenUpdateInputData.java:23:5: Class 'ChildrenUpdateInputData' looks like designed for extension (can be subclassed), but the method 'setId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildrenUpdateInputData' final or making the method 'setId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihnea_dnk/Desktop/PooProiect/ProiectPOO/./src/fileio/ChildrenUpdateInputData.java:23:23: Parameter id should be final. [FinalParameters]
[ERROR] /home/mihnea_dnk/Desktop/PooProiect/ProiectPOO/./src/fileio/ChildrenUpdateInputData.java:27:5: Class 'ChildrenUpdateInputData' looks like designed for extension (can be subclassed), but the method 'getNiceScore' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildrenUpdateInputData' final or making the method 'getNiceScore' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihnea_dnk/Desktop/PooProiect/ProiectPOO/./src/fileio/ChildrenUpdateInputData.java:31:5: Class 'ChildrenUpdateInputData' looks like designed for extension (can be subclassed), but the method 'setNiceScore' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildrenUpdateInputData' final or making the method 'setNiceScore' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihnea_dnk/Desktop/PooProiect/ProiectPOO/./src/fileio/ChildrenUpdateInputData.java:31:30: Parameter niceScore should be final. [FinalParameters]
[ERROR] /home/mihnea_dnk/Desktop/PooProiect/ProiectPOO/./src/fileio/ChildrenUpdateInputData.java:35:5: Class 'ChildrenUpdateInputData' looks like designed for extension (can be subclassed), but the method 'getGiftsPreferences' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildrenUpdateInputData' final or making the method 'getGiftsPreferences' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihnea_dnk/Desktop/PooProiect/ProiectPOO/./src/fileio/ChildrenUpdateInputData.java:39:5: Class 'ChildrenUpdateInputData' looks like designed for extension (can be subclassed), but the method 'setGiftsPreferences' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildrenUpdateInputData' final or making the method 'setGiftsPreferences' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihnea_dnk/Desktop/PooProiect/ProiectPOO/./src/fileio/ChildrenUpdateInputData.java:39:37: Parameter giftsPreferences should be final. [FinalParameters]
[ERROR] /home/mihnea_dnk/Desktop/PooProiect/ProiectPOO/./src/fileio/ChildrenUpdateInputData.java:43:5: Class 'ChildrenUpdateInputData' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildrenUpdateInputData' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihnea_dnk/Desktop/PooProiect/ProiectPOO/./src/fileio/ChildrenUpdateInputData.java:45:43: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/mihnea_dnk/Desktop/PooProiect/ProiectPOO/./src/fileio/ChildrenUpdateInputData.java:46:28: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/mihnea_dnk/Desktop/PooProiect/ProiectPOO/./src/fileio/ChildrenUpdateInputData.java:47:44: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/mihnea_dnk/Desktop/PooProiect/ProiectPOO/./src/fileio/ChildrenUpdateInputData.java:48:58: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/mihnea_dnk/Desktop/PooProiect/ProiectPOO/./src/fileio/InputLoader.java:12:8: Unused import - java.io.FileNotFoundException. [UnusedImports]
[ERROR] /home/mihnea_dnk/Desktop/PooProiect/ProiectPOO/./src/fileio/InputLoader.java:28:5: Class 'InputLoader' looks like designed for extension (can be subclassed), but the method 'getInputPath' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InputLoader' final or making the method 'getInputPath' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihnea_dnk/Desktop/PooProiect/ProiectPOO/./src/fileio/InputLoader.java:32:5: Class 'InputLoader' looks like designed for extension (can be subclassed), but the method 'readData' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InputLoader' final or making the method 'readData' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihnea_dnk/Desktop/PooProiect/ProiectPOO/./src/fileio/InputLoader.java:32:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/mihnea_dnk/Desktop/PooProiect/ProiectPOO/./src/fileio/InputLoader.java:58:37: 'typecast' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/mihnea_dnk/Desktop/PooProiect/ProiectPOO/./src/fileio/InputLoader.java:59:35: 'typecast' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/mihnea_dnk/Desktop/PooProiect/ProiectPOO/./src/fileio/InputLoader.java:63:38: 'typecast' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/mihnea_dnk/Desktop/PooProiect/ProiectPOO/./src/fileio/InputLoader.java:64:46: 'typecast' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/mihnea_dnk/Desktop/PooProiect/ProiectPOO/./src/fileio/InputLoader.java:65:47: 'typecast' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/mihnea_dnk/Desktop/PooProiect/ProiectPOO/./src/fileio/InputLoader.java:66:39: 'typecast' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/mihnea_dnk/Desktop/PooProiect/ProiectPOO/./src/fileio/InputLoader.java:67: Line is longer than 100 characters (found 109). [LineLength]
[ERROR] /home/mihnea_dnk/Desktop/PooProiect/ProiectPOO/./src/fileio/InputLoader.java:67:63: 'typecast' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/mihnea_dnk/Desktop/PooProiect/ProiectPOO/./src/fileio/InputLoader.java:68: Line is longer than 100 characters (found 115). [LineLength]
[ERROR] /home/mihnea_dnk/Desktop/PooProiect/ProiectPOO/./src/fileio/InputLoader.java:68:48: 'typecast' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/mihnea_dnk/Desktop/PooProiect/ProiectPOO/./src/fileio/InputLoader.java:69: Line is longer than 100 characters (found 156). [LineLength]
[ERROR] /home/mihnea_dnk/Desktop/PooProiect/ProiectPOO/./src/fileio/InputLoader.java:70: Line is longer than 100 characters (found 118). [LineLength]
[ERROR] /home/mihnea_dnk/Desktop/PooProiect/ProiectPOO/./src/fileio/InputLoader.java:76:49: 'typecast' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/mihnea_dnk/Desktop/PooProiect/ProiectPOO/./src/fileio/InputLoader.java:77: Line is longer than 100 characters (found 106). [LineLength]
[ERROR] /home/mihnea_dnk/Desktop/PooProiect/ProiectPOO/./src/fileio/InputLoader.java:77:44: 'typecast' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/mihnea_dnk/Desktop/PooProiect/ProiectPOO/./src/fileio/InputLoader.java:78: Line is longer than 100 characters (found 120). [LineLength]
[ERROR] /home/mihnea_dnk/Desktop/PooProiect/ProiectPOO/./src/fileio/InputLoader.java:78:71: 'typecast' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/mihnea_dnk/Desktop/PooProiect/ProiectPOO/./src/fileio/InputLoader.java:87: Line is longer than 100 characters (found 126). [LineLength]
[ERROR] /home/mihnea_dnk/Desktop/PooProiect/ProiectPOO/./src/fileio/InputLoader.java:87:53: 'typecast' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/mihnea_dnk/Desktop/PooProiect/ProiectPOO/./src/fileio/InputLoader.java:89: Line is longer than 100 characters (found 107). [LineLength]
[ERROR] /home/mihnea_dnk/Desktop/PooProiect/ProiectPOO/./src/fileio/InputLoader.java:90: Line is longer than 100 characters (found 113). [LineLength]
[ERROR] /home/mihnea_dnk/Desktop/PooProiect/ProiectPOO/./src/fileio/InputLoader.java:91: Line is longer than 100 characters (found 123). [LineLength]
[ERROR] /home/mihnea_dnk/Desktop/PooProiect/ProiectPOO/./src/fileio/InputLoader.java:99: Line is longer than 100 characters (found 107). [LineLength]
[ERROR] /home/mihnea_dnk/Desktop/PooProiect/ProiectPOO/./src/fileio/InputLoader.java:99:57: 'typecast' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/mihnea_dnk/Desktop/PooProiect/ProiectPOO/./src/fileio/InputLoader.java:100: Line is longer than 100 characters (found 113). [LineLength]
[ERROR] /home/mihnea_dnk/Desktop/PooProiect/ProiectPOO/./src/fileio/InputLoader.java:100:52: 'typecast' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/mihnea_dnk/Desktop/PooProiect/ProiectPOO/./src/fileio/InputLoader.java:101: Line is longer than 100 characters (found 127). [LineLength]
[ERROR] /home/mihnea_dnk/Desktop/PooProiect/ProiectPOO/./src/fileio/InputLoader.java:101:79: 'typecast' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/mihnea_dnk/Desktop/PooProiect/ProiectPOO/./src/fileio/InputLoader.java:111: Line is longer than 100 characters (found 105). [LineLength]
[ERROR] /home/mihnea_dnk/Desktop/PooProiect/ProiectPOO/./src/fileio/InputLoader.java:111:46: 'typecast' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/mihnea_dnk/Desktop/PooProiect/ProiectPOO/./src/fileio/InputLoader.java:112: Line is longer than 100 characters (found 105). [LineLength]
[ERROR] /home/mihnea_dnk/Desktop/PooProiect/ProiectPOO/./src/fileio/InputLoader.java:112:54: 'typecast' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/mihnea_dnk/Desktop/PooProiect/ProiectPOO/./src/fileio/InputLoader.java:113: Line is longer than 100 characters (found 107). [LineLength]
[ERROR] /home/mihnea_dnk/Desktop/PooProiect/ProiectPOO/./src/fileio/InputLoader.java:113:55: 'typecast' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/mihnea_dnk/Desktop/PooProiect/ProiectPOO/./src/fileio/InputLoader.java:114: Line is longer than 100 characters (found 107). [LineLength]
[ERROR] /home/mihnea_dnk/Desktop/PooProiect/ProiectPOO/./src/fileio/InputLoader.java:114:47: 'typecast' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/mihnea_dnk/Desktop/PooProiect/ProiectPOO/./src/fileio/InputLoader.java:115: Line is longer than 100 characters (found 119). [LineLength]
[ERROR] /home/mihnea_dnk/Desktop/PooProiect/ProiectPOO/./src/fileio/InputLoader.java:115:71: 'typecast' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/mihnea_dnk/Desktop/PooProiect/ProiectPOO/./src/fileio/InputLoader.java:116: Line is longer than 100 characters (found 125). [LineLength]
[ERROR] /home/mihnea_dnk/Desktop/PooProiect/ProiectPOO/./src/fileio/InputLoader.java:116:56: 'typecast' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/mihnea_dnk/Desktop/PooProiect/ProiectPOO/./src/fileio/InputLoader.java:117: Line is longer than 100 characters (found 166). [LineLength]
[ERROR] /home/mihnea_dnk/Desktop/PooProiect/ProiectPOO/./src/fileio/InputLoader.java:118: Line is longer than 100 characters (found 133). [LineLength]
[ERROR] /home/mihnea_dnk/Desktop/PooProiect/ProiectPOO/./src/fileio/InputLoader.java:127: Line is longer than 100 characters (found 111). [LineLength]
[ERROR] /home/mihnea_dnk/Desktop/PooProiect/ProiectPOO/./src/fileio/InputLoader.java:127:46: 'typecast' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/mihnea_dnk/Desktop/PooProiect/ProiectPOO/./src/fileio/InputLoader.java:131: Line is longer than 100 characters (found 128). [LineLength]
[ERROR] /home/mihnea_dnk/Desktop/PooProiect/ProiectPOO/./src/fileio/InputLoader.java:131:53: 'typecast' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/mihnea_dnk/Desktop/PooProiect/ProiectPOO/./src/fileio/InputLoader.java:133: Line is longer than 100 characters (found 172). [LineLength]
[ERROR] /home/mihnea_dnk/Desktop/PooProiect/ProiectPOO/./src/fileio/InputLoader.java:134: Line is longer than 100 characters (found 116). [LineLength]
[ERROR] /home/mihnea_dnk/Desktop/PooProiect/ProiectPOO/./src/fileio/InputLoader.java:139: Line is longer than 100 characters (found 136). [LineLength]
[ERROR] /home/mihnea_dnk/Desktop/PooProiect/ProiectPOO/./src/fileio/GiftsInputData.java:17:5: Class 'GiftsInputData' looks like designed for extension (can be subclassed), but the method 'getProductName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GiftsInputData' final or making the method 'getProductName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihnea_dnk/Desktop/PooProiect/ProiectPOO/./src/fileio/GiftsInputData.java:21:5: Class 'GiftsInputData' looks like designed for extension (can be subclassed), but the method 'setProductName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GiftsInputData' final or making the method 'setProductName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihnea_dnk/Desktop/PooProiect/ProiectPOO/./src/fileio/GiftsInputData.java:21:32: Parameter productName should be final. [FinalParameters]
[ERROR] /home/mihnea_dnk/Desktop/PooProiect/ProiectPOO/./src/fileio/GiftsInputData.java:25:5: Class 'GiftsInputData' looks like designed for extension (can be subclassed), but the method 'getPrice' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GiftsInputData' final or making the method 'getPrice' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihnea_dnk/Desktop/PooProiect/ProiectPOO/./src/fileio/GiftsInputData.java:29:5: Class 'GiftsInputData' looks like designed for extension (can be subclassed), but the method 'setPrice' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GiftsInputData' final or making the method 'setPrice' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihnea_dnk/Desktop/PooProiect/ProiectPOO/./src/fileio/GiftsInputData.java:29:26: Parameter price should be final. [FinalParameters]
[ERROR] /home/mihnea_dnk/Desktop/PooProiect/ProiectPOO/./src/fileio/GiftsInputData.java:33:5: Class 'GiftsInputData' looks like designed for extension (can be subclassed), but the method 'getCategory' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GiftsInputData' final or making the method 'getCategory' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihnea_dnk/Desktop/PooProiect/ProiectPOO/./src/fileio/GiftsInputData.java:37:5: Class 'GiftsInputData' looks like designed for extension (can be subclassed), but the method 'setCategory' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GiftsInputData' final or making the method 'setCategory' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihnea_dnk/Desktop/PooProiect/ProiectPOO/./src/fileio/GiftsInputData.java:37:29: Parameter category should be final. [FinalParameters]
[ERROR] /home/mihnea_dnk/Desktop/PooProiect/ProiectPOO/./src/fileio/GiftsInputData.java:41:5: Class 'GiftsInputData' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GiftsInputData' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihnea_dnk/Desktop/PooProiect/ProiectPOO/./src/fileio/GiftsInputData.java:43:34: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/mihnea_dnk/Desktop/PooProiect/ProiectPOO/./src/fileio/GiftsInputData.java:44:54: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/mihnea_dnk/Desktop/PooProiect/ProiectPOO/./src/fileio/GiftsInputData.java:45:36: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/mihnea_dnk/Desktop/PooProiect/ProiectPOO/./src/fileio/GiftsInputData.java:46:42: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/mihnea_dnk/Desktop/PooProiect/ProiectPOO/./src/fileio/ChildInputData.java:29:5: Class 'ChildInputData' looks like designed for extension (can be subclassed), but the method 'getId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildInputData' final or making the method 'getId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihnea_dnk/Desktop/PooProiect/ProiectPOO/./src/fileio/ChildInputData.java:33:5: Class 'ChildInputData' looks like designed for extension (can be subclassed), but the method 'setId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildInputData' final or making the method 'setId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihnea_dnk/Desktop/PooProiect/ProiectPOO/./src/fileio/ChildInputData.java:33:23: Parameter id should be final. [FinalParameters]
[ERROR] /home/mihnea_dnk/Desktop/PooProiect/ProiectPOO/./src/fileio/ChildInputData.java:37:5: Class 'ChildInputData' looks like designed for extension (can be subclassed), but the method 'getFirstname' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildInputData' final or making the method 'getFirstname' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihnea_dnk/Desktop/PooProiect/ProiectPOO/./src/fileio/ChildInputData.java:41:5: Class 'ChildInputData' looks like designed for extension (can be subclassed), but the method 'setFirstname' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildInputData' final or making the method 'setFirstname' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihnea_dnk/Desktop/PooProiect/ProiectPOO/./src/fileio/ChildInputData.java:41:30: Parameter firstname should be final. [FinalParameters]
[ERROR] /home/mihnea_dnk/Desktop/PooProiect/ProiectPOO/./src/fileio/ChildInputData.java:45:5: Class 'ChildInputData' looks like designed for extension (can be subclassed), but the method 'getLastname' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildInputData' final or making the method 'getLastname' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihnea_dnk/Desktop/PooProiect/ProiectPOO/./src/fileio/ChildInputData.java:49:5: Class 'ChildInputData' looks like designed for extension (can be subclassed), but the method 'setLastname' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildInputData' final or making the method 'setLastname' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihnea_dnk/Desktop/PooProiect/ProiectPOO/./src/fileio/ChildInputData.java:49:29: Parameter lastname should be final. [FinalParameters]
[ERROR] /home/mihnea_dnk/Desktop/PooProiect/ProiectPOO/./src/fileio/ChildInputData.java:53:5: Class 'ChildInputData' looks like designed for extension (can be subclassed), but the method 'getAge' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildInputData' final or making the method 'getAge' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihnea_dnk/Desktop/PooProiect/ProiectPOO/./src/fileio/ChildInputData.java:57:5: Class 'ChildInputData' looks like designed for extension (can be subclassed), but the method 'setAge' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildInputData' final or making the method 'setAge' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihnea_dnk/Desktop/PooProiect/ProiectPOO/./src/fileio/ChildInputData.java:57:24: Parameter age should be final. [FinalParameters]
[ERROR] /home/mihnea_dnk/Desktop/PooProiect/ProiectPOO/./src/fileio/ChildInputData.java:61:5: Class 'ChildInputData' looks like designed for extension (can be subclassed), but the method 'getCity' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildInputData' final or making the method 'getCity' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihnea_dnk/Desktop/PooProiect/ProiectPOO/./src/fileio/ChildInputData.java:65:5: Class 'ChildInputData' looks like designed for extension (can be subclassed), but the method 'setCity' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildInputData' final or making the method 'setCity' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihnea_dnk/Desktop/PooProiect/ProiectPOO/./src/fileio/ChildInputData.java:65:25: Parameter city should be final. [FinalParameters]
[ERROR] /home/mihnea_dnk/Desktop/PooProiect/ProiectPOO/./src/fileio/ChildInputData.java:69:5: Class 'ChildInputData' looks like designed for extension (can be subclassed), but the method 'getNiceScore' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildInputData' final or making the method 'getNiceScore' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihnea_dnk/Desktop/PooProiect/ProiectPOO/./src/fileio/ChildInputData.java:73:5: Class 'ChildInputData' looks like designed for extension (can be subclassed), but the method 'setNiceScore' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildInputData' final or making the method 'setNiceScore' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihnea_dnk/Desktop/PooProiect/ProiectPOO/./src/fileio/ChildInputData.java:73:30: Parameter niceScore should be final. [FinalParameters]
[ERROR] /home/mihnea_dnk/Desktop/PooProiect/ProiectPOO/./src/fileio/ChildInputData.java:77:5: Class 'ChildInputData' looks like designed for extension (can be subclassed), but the method 'getGiftsPreference' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildInputData' final or making the method 'getGiftsPreference' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihnea_dnk/Desktop/PooProiect/ProiectPOO/./src/fileio/ChildInputData.java:81:5: Class 'ChildInputData' looks like designed for extension (can be subclassed), but the method 'setGiftsPreference' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildInputData' final or making the method 'setGiftsPreference' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihnea_dnk/Desktop/PooProiect/ProiectPOO/./src/fileio/ChildInputData.java:81:36: Parameter giftsPreference should be final. [FinalParameters]
[ERROR] /home/mihnea_dnk/Desktop/PooProiect/ProiectPOO/./src/fileio/ChildInputData.java:85:5: Class 'ChildInputData' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildInputData' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihnea_dnk/Desktop/PooProiect/ProiectPOO/./src/fileio/ChildInputData.java:87:34: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/mihnea_dnk/Desktop/PooProiect/ProiectPOO/./src/fileio/ChildInputData.java:88:28: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/mihnea_dnk/Desktop/PooProiect/ProiectPOO/./src/fileio/ChildInputData.java:89:52: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/mihnea_dnk/Desktop/PooProiect/ProiectPOO/./src/fileio/ChildInputData.java:90:50: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/mihnea_dnk/Desktop/PooProiect/ProiectPOO/./src/fileio/ChildInputData.java:91:32: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/mihnea_dnk/Desktop/PooProiect/ProiectPOO/./src/fileio/ChildInputData.java:92:34: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/mihnea_dnk/Desktop/PooProiect/ProiectPOO/./src/fileio/ChildInputData.java:93:44: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/mihnea_dnk/Desktop/PooProiect/ProiectPOO/./src/fileio/ChildInputData.java:94:56: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/mihnea_dnk/Desktop/PooProiect/ProiectPOO/./src/fileio/Input.java:30:5: Class 'Input' looks like designed for extension (can be subclassed), but the method 'getNumberOfYears' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Input' final or making the method 'getNumberOfYears' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihnea_dnk/Desktop/PooProiect/ProiectPOO/./src/fileio/Input.java:34:5: Class 'Input' looks like designed for extension (can be subclassed), but the method 'getSantaBudget' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Input' final or making the method 'getSantaBudget' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihnea_dnk/Desktop/PooProiect/ProiectPOO/./src/fileio/Input.java:38:5: Class 'Input' looks like designed for extension (can be subclassed), but the method 'getChildData' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Input' final or making the method 'getChildData' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihnea_dnk/Desktop/PooProiect/ProiectPOO/./src/fileio/Input.java:42:5: Class 'Input' looks like designed for extension (can be subclassed), but the method 'getGiftsData' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Input' final or making the method 'getGiftsData' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihnea_dnk/Desktop/PooProiect/ProiectPOO/./src/fileio/Input.java:46:5: Class 'Input' looks like designed for extension (can be subclassed), but the method 'getAnnualChangesData' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Input' final or making the method 'getAnnualChangesData' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/mihnea_dnk/Desktop/PooProiect/ProiectPOO/./src/main/Main.java:7:8: Unused import - org.json.simple.JSONArray. [UnusedImports]
Audit done.
Checkstyle ends with 140 errors.
