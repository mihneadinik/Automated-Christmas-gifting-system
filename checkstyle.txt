Starting audit...
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\databases\Database.java:61:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\databases\Database.java:109:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\databases\Database.java:109:29: Parameter newChild should be final. [FinalParameters]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\databases\Database.java:113:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\AnnualChangesInputData.java:20:5: Class 'AnnualChangesInputData' looks like designed for extension (can be subclassed), but the method 'getNewSantaBudget' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AnnualChangesInputData' final or making the method 'getNewSantaBudget' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\AnnualChangesInputData.java:24:5: Class 'AnnualChangesInputData' looks like designed for extension (can be subclassed), but the method 'setNewSantaBudget' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AnnualChangesInputData' final or making the method 'setNewSantaBudget' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\AnnualChangesInputData.java:24:35: Parameter newSantaBudget should be final. [FinalParameters]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\AnnualChangesInputData.java:28:5: Class 'AnnualChangesInputData' looks like designed for extension (can be subclassed), but the method 'getNewGifts' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AnnualChangesInputData' final or making the method 'getNewGifts' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\AnnualChangesInputData.java:32:5: Class 'AnnualChangesInputData' looks like designed for extension (can be subclassed), but the method 'setNewGifts' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AnnualChangesInputData' final or making the method 'setNewGifts' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\AnnualChangesInputData.java:32:29: Parameter newGifts should be final. [FinalParameters]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\AnnualChangesInputData.java:36:5: Class 'AnnualChangesInputData' looks like designed for extension (can be subclassed), but the method 'getNewChildren' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AnnualChangesInputData' final or making the method 'getNewChildren' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\AnnualChangesInputData.java:40:5: Class 'AnnualChangesInputData' looks like designed for extension (can be subclassed), but the method 'setNewChildren' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AnnualChangesInputData' final or making the method 'setNewChildren' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\AnnualChangesInputData.java:40:32: Parameter newChildren should be final. [FinalParameters]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\AnnualChangesInputData.java:44:5: Class 'AnnualChangesInputData' looks like designed for extension (can be subclassed), but the method 'getChildrenUpdate' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AnnualChangesInputData' final or making the method 'getChildrenUpdate' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\AnnualChangesInputData.java:48:5: Class 'AnnualChangesInputData' looks like designed for extension (can be subclassed), but the method 'setChildrenUpdate' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AnnualChangesInputData' final or making the method 'setChildrenUpdate' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\AnnualChangesInputData.java:48:35: Parameter childrenUpdate should be final. [FinalParameters]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\AnnualChangesInputData.java:52:5: Class 'AnnualChangesInputData' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AnnualChangesInputData' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\AnnualChangesInputData.java:54:42: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\AnnualChangesInputData.java:55:52: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\AnnualChangesInputData.java:56:42: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\AnnualChangesInputData.java:57:48: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\AnnualChangesInputData.java:58:54: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\ChildInputData.java:29:5: Class 'ChildInputData' looks like designed for extension (can be subclassed), but the method 'getId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildInputData' final or making the method 'getId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\ChildInputData.java:33:5: Class 'ChildInputData' looks like designed for extension (can be subclassed), but the method 'setId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildInputData' final or making the method 'setId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\ChildInputData.java:33:23: Parameter id should be final. [FinalParameters]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\ChildInputData.java:37:5: Class 'ChildInputData' looks like designed for extension (can be subclassed), but the method 'getFirstname' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildInputData' final or making the method 'getFirstname' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\ChildInputData.java:41:5: Class 'ChildInputData' looks like designed for extension (can be subclassed), but the method 'setFirstname' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildInputData' final or making the method 'setFirstname' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\ChildInputData.java:41:30: Parameter firstname should be final. [FinalParameters]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\ChildInputData.java:45:5: Class 'ChildInputData' looks like designed for extension (can be subclassed), but the method 'getLastname' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildInputData' final or making the method 'getLastname' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\ChildInputData.java:49:5: Class 'ChildInputData' looks like designed for extension (can be subclassed), but the method 'setLastname' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildInputData' final or making the method 'setLastname' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\ChildInputData.java:49:29: Parameter lastname should be final. [FinalParameters]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\ChildInputData.java:53:5: Class 'ChildInputData' looks like designed for extension (can be subclassed), but the method 'getAge' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildInputData' final or making the method 'getAge' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\ChildInputData.java:57:5: Class 'ChildInputData' looks like designed for extension (can be subclassed), but the method 'setAge' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildInputData' final or making the method 'setAge' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\ChildInputData.java:57:24: Parameter age should be final. [FinalParameters]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\ChildInputData.java:61:5: Class 'ChildInputData' looks like designed for extension (can be subclassed), but the method 'getCity' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildInputData' final or making the method 'getCity' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\ChildInputData.java:65:5: Class 'ChildInputData' looks like designed for extension (can be subclassed), but the method 'setCity' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildInputData' final or making the method 'setCity' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\ChildInputData.java:65:25: Parameter city should be final. [FinalParameters]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\ChildInputData.java:69:5: Class 'ChildInputData' looks like designed for extension (can be subclassed), but the method 'getNiceScore' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildInputData' final or making the method 'getNiceScore' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\ChildInputData.java:73:5: Class 'ChildInputData' looks like designed for extension (can be subclassed), but the method 'setNiceScore' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildInputData' final or making the method 'setNiceScore' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\ChildInputData.java:73:30: Parameter niceScore should be final. [FinalParameters]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\ChildInputData.java:77:5: Class 'ChildInputData' looks like designed for extension (can be subclassed), but the method 'getGiftsPreference' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildInputData' final or making the method 'getGiftsPreference' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\ChildInputData.java:81:5: Class 'ChildInputData' looks like designed for extension (can be subclassed), but the method 'setGiftsPreference' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildInputData' final or making the method 'setGiftsPreference' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\ChildInputData.java:81:36: Parameter giftsPreference should be final. [FinalParameters]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\ChildInputData.java:85:5: Class 'ChildInputData' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildInputData' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\ChildInputData.java:87:34: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\ChildInputData.java:88:28: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\ChildInputData.java:89:52: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\ChildInputData.java:90:50: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\ChildInputData.java:91:32: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\ChildInputData.java:92:34: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\ChildInputData.java:93:44: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\ChildInputData.java:94:56: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\ChildrenUpdateInputData.java:19:5: Class 'ChildrenUpdateInputData' looks like designed for extension (can be subclassed), but the method 'getId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildrenUpdateInputData' final or making the method 'getId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\ChildrenUpdateInputData.java:23:5: Class 'ChildrenUpdateInputData' looks like designed for extension (can be subclassed), but the method 'setId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildrenUpdateInputData' final or making the method 'setId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\ChildrenUpdateInputData.java:23:23: Parameter id should be final. [FinalParameters]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\ChildrenUpdateInputData.java:27:5: Class 'ChildrenUpdateInputData' looks like designed for extension (can be subclassed), but the method 'getNiceScore' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildrenUpdateInputData' final or making the method 'getNiceScore' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\ChildrenUpdateInputData.java:31:5: Class 'ChildrenUpdateInputData' looks like designed for extension (can be subclassed), but the method 'setNiceScore' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildrenUpdateInputData' final or making the method 'setNiceScore' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\ChildrenUpdateInputData.java:31:30: Parameter niceScore should be final. [FinalParameters]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\ChildrenUpdateInputData.java:35:5: Class 'ChildrenUpdateInputData' looks like designed for extension (can be subclassed), but the method 'getGiftsPreferences' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildrenUpdateInputData' final or making the method 'getGiftsPreferences' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\ChildrenUpdateInputData.java:39:5: Class 'ChildrenUpdateInputData' looks like designed for extension (can be subclassed), but the method 'setGiftsPreferences' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildrenUpdateInputData' final or making the method 'setGiftsPreferences' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\ChildrenUpdateInputData.java:39:37: Parameter giftsPreferences should be final. [FinalParameters]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\ChildrenUpdateInputData.java:43:5: Class 'ChildrenUpdateInputData' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildrenUpdateInputData' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\ChildrenUpdateInputData.java:45:43: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\ChildrenUpdateInputData.java:46:28: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\ChildrenUpdateInputData.java:47:44: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\ChildrenUpdateInputData.java:48:58: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\GiftsInputData.java:17:5: Class 'GiftsInputData' looks like designed for extension (can be subclassed), but the method 'getProductName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GiftsInputData' final or making the method 'getProductName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\GiftsInputData.java:21:5: Class 'GiftsInputData' looks like designed for extension (can be subclassed), but the method 'setProductName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GiftsInputData' final or making the method 'setProductName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\GiftsInputData.java:21:32: Parameter productName should be final. [FinalParameters]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\GiftsInputData.java:25:5: Class 'GiftsInputData' looks like designed for extension (can be subclassed), but the method 'getPrice' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GiftsInputData' final or making the method 'getPrice' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\GiftsInputData.java:29:5: Class 'GiftsInputData' looks like designed for extension (can be subclassed), but the method 'setPrice' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GiftsInputData' final or making the method 'setPrice' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\GiftsInputData.java:29:26: Parameter price should be final. [FinalParameters]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\GiftsInputData.java:33:5: Class 'GiftsInputData' looks like designed for extension (can be subclassed), but the method 'getCategory' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GiftsInputData' final or making the method 'getCategory' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\GiftsInputData.java:37:5: Class 'GiftsInputData' looks like designed for extension (can be subclassed), but the method 'setCategory' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GiftsInputData' final or making the method 'setCategory' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\GiftsInputData.java:37:29: Parameter category should be final. [FinalParameters]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\GiftsInputData.java:41:5: Class 'GiftsInputData' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GiftsInputData' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\GiftsInputData.java:43:34: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\GiftsInputData.java:44:54: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\GiftsInputData.java:45:36: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\GiftsInputData.java:46:42: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\Input.java:30:5: Class 'Input' looks like designed for extension (can be subclassed), but the method 'getNumberOfYears' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Input' final or making the method 'getNumberOfYears' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\Input.java:34:5: Class 'Input' looks like designed for extension (can be subclassed), but the method 'getSantaBudget' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Input' final or making the method 'getSantaBudget' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\Input.java:38:5: Class 'Input' looks like designed for extension (can be subclassed), but the method 'getChildData' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Input' final or making the method 'getChildData' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\Input.java:42:5: Class 'Input' looks like designed for extension (can be subclassed), but the method 'getGiftsData' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Input' final or making the method 'getGiftsData' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\Input.java:46:5: Class 'Input' looks like designed for extension (can be subclassed), but the method 'getAnnualChangesData' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Input' final or making the method 'getAnnualChangesData' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\InputLoader.java:12:8: Unused import - java.io.FileNotFoundException. [UnusedImports]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\InputLoader.java:28:5: Class 'InputLoader' looks like designed for extension (can be subclassed), but the method 'getInputPath' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InputLoader' final or making the method 'getInputPath' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\InputLoader.java:32:5: Class 'InputLoader' looks like designed for extension (can be subclassed), but the method 'readData' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InputLoader' final or making the method 'readData' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\InputLoader.java:32:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\InputLoader.java:52:37: 'typecast' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\InputLoader.java:53:35: 'typecast' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\InputLoader.java:57:38: 'typecast' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\InputLoader.java:58:46: 'typecast' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\InputLoader.java:59:47: 'typecast' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\InputLoader.java:60:39: 'typecast' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\InputLoader.java:61: Line is longer than 100 characters (found 109). [LineLength]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\InputLoader.java:61:63: 'typecast' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\InputLoader.java:62: Line is longer than 100 characters (found 115). [LineLength]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\InputLoader.java:62:48: 'typecast' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\InputLoader.java:63: Line is longer than 100 characters (found 156). [LineLength]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\InputLoader.java:64: Line is longer than 100 characters (found 118). [LineLength]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\InputLoader.java:70:49: 'typecast' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\InputLoader.java:71: Line is longer than 100 characters (found 106). [LineLength]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\InputLoader.java:71:44: 'typecast' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\InputLoader.java:72: Line is longer than 100 characters (found 120). [LineLength]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\InputLoader.java:72:71: 'typecast' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\InputLoader.java:81: Line is longer than 100 characters (found 126). [LineLength]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\InputLoader.java:81:53: 'typecast' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\InputLoader.java:83: Line is longer than 100 characters (found 107). [LineLength]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\InputLoader.java:84: Line is longer than 100 characters (found 113). [LineLength]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\InputLoader.java:85: Line is longer than 100 characters (found 123). [LineLength]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\InputLoader.java:93: Line is longer than 100 characters (found 107). [LineLength]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\InputLoader.java:93:57: 'typecast' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\InputLoader.java:94: Line is longer than 100 characters (found 113). [LineLength]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\InputLoader.java:94:52: 'typecast' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\InputLoader.java:95: Line is longer than 100 characters (found 127). [LineLength]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\InputLoader.java:95:79: 'typecast' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\InputLoader.java:105: Line is longer than 100 characters (found 105). [LineLength]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\InputLoader.java:105:46: 'typecast' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\InputLoader.java:106: Line is longer than 100 characters (found 105). [LineLength]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\InputLoader.java:106:54: 'typecast' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\InputLoader.java:107: Line is longer than 100 characters (found 107). [LineLength]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\InputLoader.java:107:55: 'typecast' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\InputLoader.java:108: Line is longer than 100 characters (found 107). [LineLength]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\InputLoader.java:108:47: 'typecast' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\InputLoader.java:109: Line is longer than 100 characters (found 119). [LineLength]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\InputLoader.java:109:71: 'typecast' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\InputLoader.java:110: Line is longer than 100 characters (found 125). [LineLength]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\InputLoader.java:110:56: 'typecast' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\InputLoader.java:111: Line is longer than 100 characters (found 166). [LineLength]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\InputLoader.java:112: Line is longer than 100 characters (found 133). [LineLength]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\InputLoader.java:121: Line is longer than 100 characters (found 111). [LineLength]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\InputLoader.java:121:46: 'typecast' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\InputLoader.java:125: Line is longer than 100 characters (found 128). [LineLength]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\InputLoader.java:125:53: 'typecast' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\InputLoader.java:127: Line is longer than 100 characters (found 172). [LineLength]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\InputLoader.java:128: Line is longer than 100 characters (found 116). [LineLength]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\InputLoader.java:133: Line is longer than 100 characters (found 136). [LineLength]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\OutputModel.java:3:8: Unused import - common.Constants. [UnusedImports]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\Writer.java:11:8: Unused import - org.json.simple.JSONArray. [UnusedImports]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\Writer.java:13:8: Unused import - simulation.YearData. [UnusedImports]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\Writer.java:18:8: Unused import - java.util.LinkedHashMap. [UnusedImports]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\Writer.java:20:8: Unused import - java.util.Map. [UnusedImports]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\Writer.java:31:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\Writer.java:39: Line is longer than 100 characters (found 118). [LineLength]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\Writer.java:41: Line is longer than 100 characters (found 120). [LineLength]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\fileio\Writer.java:62:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\main\Main.java:8:8: Unused import - fileio.OutputModel. [UnusedImports]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\main\Main.java:10:8: Unused import - org.json.simple.JSONArray. [UnusedImports]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\main\Main.java:86: Line is longer than 100 characters (found 124). [LineLength]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\objects\AnnualChange.java:3:8: Unused import - fileio.ChildInputData. [UnusedImports]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\objects\AnnualChange.java:4:8: Unused import - fileio.ChildrenUpdateInputData. [UnusedImports]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\objects\AnnualChange.java:5:8: Unused import - fileio.GiftsInputData. [UnusedImports]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\objects\AnnualChange.java:15: Line is longer than 100 characters (found 155). [LineLength]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\objects\AnnualChange.java:22:5: Class 'AnnualChange' looks like designed for extension (can be subclassed), but the method 'getNewSantaBudget' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AnnualChange' final or making the method 'getNewSantaBudget' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\objects\AnnualChange.java:26:5: Class 'AnnualChange' looks like designed for extension (can be subclassed), but the method 'setNewSantaBudget' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AnnualChange' final or making the method 'setNewSantaBudget' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\objects\AnnualChange.java:26:35: Parameter newSantaBudget should be final. [FinalParameters]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\objects\AnnualChange.java:30:5: Class 'AnnualChange' looks like designed for extension (can be subclassed), but the method 'getNewGifts' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AnnualChange' final or making the method 'getNewGifts' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\objects\AnnualChange.java:34:5: Class 'AnnualChange' looks like designed for extension (can be subclassed), but the method 'setNewGifts' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AnnualChange' final or making the method 'setNewGifts' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\objects\AnnualChange.java:34:29: Parameter newGifts should be final. [FinalParameters]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\objects\AnnualChange.java:38:5: Class 'AnnualChange' looks like designed for extension (can be subclassed), but the method 'getNewChildren' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AnnualChange' final or making the method 'getNewChildren' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\objects\AnnualChange.java:42:5: Class 'AnnualChange' looks like designed for extension (can be subclassed), but the method 'setNewChildren' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AnnualChange' final or making the method 'setNewChildren' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\objects\AnnualChange.java:42:32: Parameter newChildren should be final. [FinalParameters]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\objects\AnnualChange.java:46:5: Class 'AnnualChange' looks like designed for extension (can be subclassed), but the method 'getChildrenUpdate' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AnnualChange' final or making the method 'getChildrenUpdate' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\objects\AnnualChange.java:50:5: Class 'AnnualChange' looks like designed for extension (can be subclassed), but the method 'setChildrenUpdate' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AnnualChange' final or making the method 'setChildrenUpdate' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\objects\AnnualChange.java:50:35: Parameter childrenUpdate should be final. [FinalParameters]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\objects\AnnualChange.java:54:5: Class 'AnnualChange' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AnnualChange' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\objects\AnnualChange.java:56:32: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\objects\AnnualChange.java:57:52: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\objects\AnnualChange.java:58:42: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\objects\AnnualChange.java:59:48: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\objects\AnnualChange.java:60:54: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\objects\Child.java:68:33: Parameter niceScore should be final. [FinalParameters]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\objects\Child.java:68:40: 'niceScore' hides a field. [HiddenField]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\objects\Child.java:81:40: Parameter newGifts should be final. [FinalParameters]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\objects\Child.java:121:35: Parameter budgetUnit should be final. [FinalParameters]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\objects\Child.java:145:23: Parameter id should be final. [FinalParameters]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\objects\Child.java:153:30: Parameter firstname should be final. [FinalParameters]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\objects\Child.java:161:29: Parameter lastname should be final. [FinalParameters]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\objects\Child.java:169:24: Parameter age should be final. [FinalParameters]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\objects\Child.java:177:25: Parameter city should be final. [FinalParameters]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\objects\Child.java:185:30: Parameter niceScore should be final. [FinalParameters]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\objects\Child.java:193:36: Parameter giftsPreference should be final. [FinalParameters]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\objects\Child.java:201:33: Parameter scoreHistory should be final. [FinalParameters]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\objects\Child.java:209:25: Parameter type should be final. [FinalParameters]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\objects\Child.java:217:32: Parameter santaBudget should be final. [FinalParameters]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\objects\Child.java:225:33: Parameter averageScore should be final. [FinalParameters]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\objects\Child.java:233:34: Parameter receivedGifts should be final. [FinalParameters]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\objects\Child.java:239:25: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\objects\Child.java:240:28: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\objects\Child.java:241:52: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\objects\Child.java:242:50: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\objects\Child.java:243:32: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\objects\Child.java:244:34: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\objects\Child.java:245:44: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\objects\Child.java:246:56: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\objects\ChildrenUpdate.java:12: Line is longer than 100 characters (found 108). [LineLength]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\objects\ChildrenUpdate.java:18:5: Class 'ChildrenUpdate' looks like designed for extension (can be subclassed), but the method 'getId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildrenUpdate' final or making the method 'getId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\objects\ChildrenUpdate.java:22:5: Class 'ChildrenUpdate' looks like designed for extension (can be subclassed), but the method 'setId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildrenUpdate' final or making the method 'setId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\objects\ChildrenUpdate.java:22:23: Parameter id should be final. [FinalParameters]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\objects\ChildrenUpdate.java:26:5: Class 'ChildrenUpdate' looks like designed for extension (can be subclassed), but the method 'getNiceScore' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildrenUpdate' final or making the method 'getNiceScore' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\objects\ChildrenUpdate.java:30:5: Class 'ChildrenUpdate' looks like designed for extension (can be subclassed), but the method 'setNiceScore' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildrenUpdate' final or making the method 'setNiceScore' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\objects\ChildrenUpdate.java:30:30: Parameter niceScore should be final. [FinalParameters]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\objects\ChildrenUpdate.java:34:5: Class 'ChildrenUpdate' looks like designed for extension (can be subclassed), but the method 'getGiftsPreferences' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildrenUpdate' final or making the method 'getGiftsPreferences' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\objects\ChildrenUpdate.java:38:5: Class 'ChildrenUpdate' looks like designed for extension (can be subclassed), but the method 'setGiftsPreferences' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildrenUpdate' final or making the method 'setGiftsPreferences' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\objects\ChildrenUpdate.java:38:37: Parameter giftsPreferences should be final. [FinalParameters]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\objects\ChildrenUpdate.java:42:5: Class 'ChildrenUpdate' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildrenUpdate' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\objects\ChildrenUpdate.java:44:34: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\objects\ChildrenUpdate.java:45:28: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\objects\ChildrenUpdate.java:46:44: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\objects\ChildrenUpdate.java:47:58: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\objects\Gift.java:22:5: Class 'Gift' looks like designed for extension (can be subclassed), but the method 'getProductName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Gift' final or making the method 'getProductName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\objects\Gift.java:26:5: Class 'Gift' looks like designed for extension (can be subclassed), but the method 'setProductName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Gift' final or making the method 'setProductName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\objects\Gift.java:26:32: Parameter productName should be final. [FinalParameters]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\objects\Gift.java:30:5: Class 'Gift' looks like designed for extension (can be subclassed), but the method 'getPrice' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Gift' final or making the method 'getPrice' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\objects\Gift.java:34:5: Class 'Gift' looks like designed for extension (can be subclassed), but the method 'setPrice' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Gift' final or making the method 'setPrice' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\objects\Gift.java:34:26: Parameter price should be final. [FinalParameters]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\objects\Gift.java:38:5: Class 'Gift' looks like designed for extension (can be subclassed), but the method 'getCategory' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Gift' final or making the method 'getCategory' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\objects\Gift.java:42:5: Class 'Gift' looks like designed for extension (can be subclassed), but the method 'setCategory' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Gift' final or making the method 'setCategory' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\objects\Gift.java:42:29: Parameter category should be final. [FinalParameters]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\objects\Gift.java:46:5: Class 'Gift' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Gift' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\objects\Gift.java:48:24: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\objects\Gift.java:49:54: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\objects\Gift.java:50:36: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\objects\Gift.java:51:42: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\observers\ChildUpdate.java:4:8: Unused import - objects.Gift. [UnusedImports]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\observers\ChildUpdate.java:9:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\observers\ChildUpdate.java:9:5: Redundant 'public' modifier. [RedundantModifier]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\observers\ChildUpdate.java:10:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\observers\ChildUpdate.java:10:5: Redundant 'public' modifier. [RedundantModifier]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\observers\ChildUpdate.java:11:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\observers\ChildUpdate.java:11:5: Redundant 'public' modifier. [RedundantModifier]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\observers\ChildUpdate.java:12:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\observers\ChildUpdate.java:12:5: Redundant 'public' modifier. [RedundantModifier]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\observers\ChildUpdate.java:13:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\observers\ChildUpdate.java:13:5: Redundant 'public' modifier. [RedundantModifier]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\observers\SantaClausUpdate.java:3:8: Unused import - objects.Child. [UnusedImports]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\observers\SantaClausUpdate.java:10:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\observers\SantaClausUpdate.java:10:5: Redundant 'public' modifier. [RedundantModifier]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\observers\SantaClausUpdate.java:11:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\observers\SantaClausUpdate.java:11:5: Redundant 'public' modifier. [RedundantModifier]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\observers\SantaClausUpdate.java:12:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\observers\SantaClausUpdate.java:12:5: Redundant 'public' modifier. [RedundantModifier]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\observers\SantaClausUpdate.java:13:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\observers\SantaClausUpdate.java:13:5: Redundant 'public' modifier. [RedundantModifier]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\observers\SantaClausUpdate.java:14:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\observers\SantaClausUpdate.java:14:5: Redundant 'public' modifier. [RedundantModifier]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\simulation\SimulateYears.java:5:8: Unused import - fileio.OutputModel. [UnusedImports]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\simulation\SimulateYears.java:9:8: Unused import - objects.ChildrenUpdate. [UnusedImports]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\simulation\SimulateYears.java:10:8: Unused import - objects.Gift. [UnusedImports]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\simulation\SimulateYears.java:11:8: Unused import - observers.SantaClausUpdate. [UnusedImports]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\simulation\SimulateYears.java:12:8: Unused import - org.json.simple.JSONArray. [UnusedImports]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\simulation\SimulateYears.java:16:8: Unused import - java.util.ArrayList. [UnusedImports]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\simulation\SimulateYears.java:19:33: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\simulation\SimulateYears.java:25: Line is longer than 100 characters (found 125). [LineLength]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\simulation\SimulateYears.java:58:33: '(' is preceded with whitespace. [MethodParamPad]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\simulation\SimulateYears.java:58:34: Parameter currChange should be final. [FinalParameters]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\simulation\SimulateYears.java:80:37: Parameter newChildren should be final. [FinalParameters]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\simulation\SolveYear.java:3:8: Unused import - common.Constants. [UnusedImports]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\simulation\SolveYear.java:9:8: Unused import - org.json.simple.JSONArray. [UnusedImports]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\simulation\SolveYear.java:19:25: '{' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\simulation\SolveYear.java:19:26: '}' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\simulation\SolveYear.java:21: Line is longer than 100 characters (found 104). [LineLength]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\simulation\SolveYear.java:28: Line is longer than 100 characters (found 135). [LineLength]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\simulation\SolveYear.java:28:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\simulation\SolveYear.java:34: Line is longer than 100 characters (found 106). [LineLength]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\simulation\SolveYear.java:59: Line is longer than 100 characters (found 104). [LineLength]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\simulation\SolveYear.java:59:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\simulation\YearData.java:19: Line is longer than 100 characters (found 118). [LineLength]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\simulation\YearData.java:48:30: Parameter newBudget should be final. [FinalParameters]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\simulation\YearData.java:59:33: Parameter newGifts should be final. [FinalParameters]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\simulation\YearData.java:88:37: Parameter updates should be final. [FinalParameters]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\simulation\YearData.java:109:32: Parameter id should be final. [FinalParameters]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\strategies\AverageScoreStrategy.java:4:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\strategies\BabyStrategy.java:6:64: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\strategies\KidStrategy.java:3:8: Unused import - common.Constants. [UnusedImports]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\strategies\KidStrategy.java:6:63: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\strategies\StrategyFactory.java:6:1: Utility classes should not have a public or default constructor. [HideUtilityClassConstructor]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\strategies\StrategyFactory.java:15:67: Parameter child should be final. [FinalParameters]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\strategies\StrategyFactory.java:16:9: 'switch' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\strategies\StrategyFactory.java:16:9: switch without "default" clause. [MissingSwitchDefault]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\strategies\StrategyFactory.java:30: Line is longer than 100 characters (found 104). [LineLength]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\strategies\TeenStrategy.java:3:8: Unused import - common.Constants. [UnusedImports]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\strategies\TeenStrategy.java:6:64: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\utils\Utils.java:13:8: Unused import - org.json.simple.JSONObject. [UnusedImports]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\utils\Utils.java:15:17: Using the '.*' form of import should be avoided - java.util.*. [AvoidStarImport]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\utils\Utils.java:18:21: '{' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\utils\Utils.java:18:22: '}' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\utils\Utils.java:20:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\utils\Utils.java:30:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\utils\Utils.java:42: Line is longer than 100 characters (found 115). [LineLength]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\utils\Utils.java:42:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\utils\Utils.java:46: Line is longer than 100 characters (found 107). [LineLength]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\utils\Utils.java:52:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\utils\Utils.java:68:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\utils\Utils.java:84:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\utils\Utils.java:96:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\utils\Utils.java:108:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\utils\Utils.java:120:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\utils\Utils.java:136:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\utils\Utils.java:144:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\mihne\Documents\GitHub\ProiectPOO\.\src\utils\Utils.java:152:5: Missing a Javadoc comment. [MissingJavadocMethod]
Audit done.
Checkstyle ends with 302 errors.
